from pycocotools import coco
import faulthandler

# faulthandler.enable()

mask1 = {'size': [480, 848], 'counts': 'Sbh3:d>5L2O1N101N10000O2O000O10000O101O000O10000O1hCWOY:i0fE\\OV:d0iE@S:a0lEDP:<PFHl98TFKh96WFOe91[F2b9N^F6]9KcF9Y9GgF<V9DjF`0Q9AoFa0o8_OQGb0n8^ORGb0m8_ORGc0m8]OSGc0Y6A_IL8c0Y6EnHkNSON4P1b1@[N>n7<fH7P1oNaN:i7c0`H7V1lNdN7f7l2fIkLjN6_7o2gIdLUO9T7S3eIeLZO6Q7U3cIfL\\O7P7S3bIiL[O6S7Q3\\HlL7274U7n2]HRN:SOX7l2ZHUN;UOW7f2^HVN8Bn6X2jHXN5Hj6U4SIoKk6R4RIQLm6Q4PIPLP7h4PI`JP7^5RIbJn6]5TIhJf6V5\\IjJd6T5_IkJa6T5bIjJ^6T5jIfJV6Y5kIfJV6X5WJ\\Jj5d5bJkIc5U6d1002N000000000000O1000000O100000000001O00000000000000000000O100O11O2N2N1O2RH`JX6a5eIaJ[6`5^IfJb6\\5ZIfJf6[5XIfJh6[2WI^NOdN0c0j6[2ZIYN01i6f1WIXN2Nj6j1WITN20g6l1WIRN51d6m1TJTM[Ol0b6o1[JlLWOQ1`6S2[JiLXO;T7l2fIfLYO;R7o2gIeLWO:S7k1hHkMU1ORO8R7n1hHjMU10RO6Q7P2iHhMU18lNOV7Q2hHjMU18jNMZ7Q2gHjMU19dN1`7l1gHjMU1:_N3f7i1gHhMV1;XN9k7d1gHhMV1;TN=o7`1gHhMV1\\1S6l0lJTOT5l0mJROT5n0lJPOV5P1jJlNZ5T1fJhN^5X1bJdNb5\\1^J_Ng5a1YJ[Nk5e1UJWNo5h1RJSNS6m1nInMV6R2kIiMY6W2X3000000000000000000000000000000O10000000000000SDnMl:R2oDWNm:i1QE\\Nl:d1QEaNm:_1QEeNm:[1REhNl:Y1QEjNn:V1QElNn:T1QEoNm:Q1REQOm:o0RESOm:m0RETOn:l0REUOm:`2O1O001O1O1fIlKf1U4VNnKj1S4TNnKl1S4RNoKm1R4QNoKo1R4oMnKR2S4kMoKU2R4VMhKQM7i5S4PMkKUM3k5S4mLmKnLI08U6T4kLkKPM9U6m3hLdLX3^3cLeL]3]3`LdL`3^3\\LdLd3^3YLcLg3_3VLbLj3a3RL`Ln3d3mK\\LT4i3eKZLZ4o3YKULg4R70_IkIW4U6hKlIX4T6gKmIY4S6fKnIZ4R6eKnI\\4R6cKoI]4Q6aKQJ_4o5`KRJ`4n5_KSJa4m5^KTJb4l5\\KVJd4j5[KWJe4i5YKYJh4f5WK[Ji4e5TK^Jl4b5QKaJo4_5RK`Jn4`5RK`Jo4_5RK`Jn4`5RK`Jn4`5SK_Jn4`5RK`Jn4`5SK_JP5^5PKbJP5^5QKaJ8Bd2m5TMaJ7Fb2i5XM`J5Ja2f5ZM`J4La2d5\\M_J3N`2c5]M_JF<l2U5_M^J21^2a5aM]J12^2a5bM\\J04]2`5eMYJO7\\2`5gMVJN;Z2_5MaJ3_5MbJ2^5NbJ2^5NcJ1]5OcJ1]5OdJ0\\50dJ0\\50eJO[51eJO[51fJNZ52fJNZ52gJMY53gJMY53hJLX54iJJX56hJJX56iJIW57jJHV58kJGU59lJFT5:nJDR5<oJBR5>PK@P5`0TKVL6^1f4\\2oLaMQ3_2PM`MP3`2RM]Mb3P2_LoMo3c1RL\\NT4^1lKaNY4[1iKcNZ4Z1fKfN]4V1fKgN]4W1bLjMa3S2aLkMa3S2`LlMa3S2_LmMc3Q2^LnMd3o1]LQNd3n1]LPNe3o1[LQNg3m1ZLRNg3m1g4N2O1O1O1N2O1O1O1O0O2O1N2N1O2N3M2N2M4M2M4L5J6JUmV4'}
mask2 = {'size': [480, 848], 'counts': 'Sbh3:d>5L2O1N101N10000O2O000O10000O101O0^D@d8`0TGJi87nF2R9NfF;Y9E_Fc0`9^O]Fe0c9[O\\Fg0c9YO]Fh0XOeNY9d0^Gi0UOfN]9a0^Gi0QOjNEBf9k0dGj0mNlNFBh9i0eGk0gNUOc90eGo1[8QNeGo1Z8RNfG9dN<f9[OgG0jNe0`9[OfGHQOm0Y9\\OgGCROQ1X9\\OgGAQOQ1[9^OdGAPOo0^9AbG@POk0b9E^G_OPOj0Q7KnIL1^OPOOB9c7b0YIkNSOM5Q1[1YOQO3A6e7h0oH6j0hNQO4C2f7o0eH7Q1cNQO6DGMLl7c3bIdLQO5o7W3PIdLPO5Q8W3oHeLnN4T8W3nHgLkN2X8W3lHiLjN1Z8V3fGlL72HK\\8W3eGRNLgN`8X3`GUNNcNc8X3_GVNLbNf8X3^GfNb8k31O1O1O100O1001O1O2N001O1O00002N000000000000O1000000O100000000001O00000000000000000000O100O100O1O1O1O1O11O1O00aMXGgNg8Y1\\GeNc8[1]GfNb8Z1aGdN^8\\1bGRNIhNe8V3_HTMnNFb8U3hHlLhN0_8T3kHiLhN2]8U3lHfLjN5Y8U3mHdLmN7U8o1SHkMQ1NiN7S8P2THjMP1OiN8R8o1VHhMP12hN7Q8o1VHjMP10jN7o7o1WHjMo02kN4o7P2WHjMo03kN3FDn7\\2cHhMo08hN0EINJl7]2jHhMo09gN0C1j7n1mHhMo0:gNc0Z7[1nJRNiMe0V7Y1PKSNkMf0R7W1SKSNlMh0n6U1VKSNlMk0k6R1XKUNmMk0h6P1[K[NhMg0j6n0]KbNdMb0l6l0`KhN_M=o6k0bK=_4BbKZObMVOl6`1cKXOeMUOh6c1dKVOhMSOe6g1eKSOjMmNACR7]2iKmNgMPOd6S2kKfNdMUOa6U2QL_NQ5a1UKYNk4g1[KRNf4n1`KkMa4U2U400000000000000O1000000000000000SDnMl:R2oDWNm:i1QE\\Nl:d1QEaNm:_1QEeNm:[1REhNl:Y1QEjNn:V1QElNn:T1QEoNm:Q1REQOm:o0RESOm:m0RETOn:l0REUOm:`2O1O001O1O1fIlKf1U4VNnKj1S4TNnKl1S4RNoKm1R4QNoKo1R4oMnKR2S4kMoKU2R4VMhKQM7i5S4PMkKUM3k5S4mLmKnLI08U6T4kLkKPM9U6m3hLdLX3^3cLeL]3]3`LdL`3^3\\LdLd3^3YLcLg3_3VLbLj3a3RL`Ln3d3mK\\LT4i3eKZLZ4o3YKULg4R70_IkIW4U6hKlIX4T6gKmIY4S6fKnIZ4R6eKoI[4Q6dKoI]4Q6aKQJ_4o5`KRJ`4n5_KSJa4m5^KTJb4l5\\KVJd4j5[KWJe4i5YKYJh4f5WK[Ji4e5TK^Jl4b5QKaJo4_5RK`Jn4`5RK`Jo4_5RK`Jn4`5RK`Jn4`5SK_Jn4`5RK`Jn4`5SK_JP5^5PKbJP5^5QKaJ8Bd2m5TMaJ7Fb2i5XM`J5Ja2f5ZM`J4La2d5\\M_J3N`2c5]M_JF<l2U5_M^J21^2a5aM]J12^2a5bM\\J04]2`5eMYJO7\\2`5gMVJN;Z2_5MaJ3_5MbJ2^5NbJ2^5NcJ1]5OcJ1]5OdJ0\\50dJ0\\50eJO[51eJO[51fJNZ52fJNZ52gJMY53gJMY53hJLX54iJJX56hJJX56iJIW57jJHV58kJGU59lJFT5:nJDR5<oJBR5>PK@P5`0TKVL6^1f4\\2oLaMQ3_2PM`MP3`2RM]Mb3P2_LoMo3c1RL\\NT4^1lKaNY4[1iKcNZ4Z1fKfN]4V1fKgN]4W1bLjMa3S2aLkMa3S2`LlMa3S2_LmMc3Q2^LnMd3o1]LQNd3n1]LPNe3o1[LQNg3m1ZLRNg3m1g4N2O1O1O1N2O1O1O1O0O2O1N2N1O2N3M2N2M4M2M4L5J6JUmV4'}

"Sbh3:d>5L2O1N101N10000O2O000O10000O101O0^D@d8`0TGJi87nF2R9NfF;Y9E_Fc0`9^\u0000\u0000\u0000\u00000c9[O\\Fg0c9YO]Fh0XOeNY9d0^Gi0UOfN]9a0^Gi0QOjNEBf9k0dGj0mNlNFBh9i0eGk0gNUOc90eGo1[8QNeGo1Z8RNfG9dN<f9[OgG0jNe0`9[OfGHQOm0Y9\\OgGCROQ1X9\\OgGAQOQ1[9^OdGAPOo0^9AbG@POk0b9E^G_OPOj0Q7KnIL1^OPOOB9c7b0YIkNSOM5Q1[1YOQO3A6e7h0oH6j0hNQO4C2f7o0eH7Q1cNQO6DGMLl7c3bIdLQO5o7W3PIdLPO5Q8W3oHeLnN4T8W3nHgLkN2X8W3lHiLjN1Z8V3fGlL72HK\\8W3eGRNLgN`8X3`GUNNcNc8X3_GVNLbNf8X3^GfNb8k31O1O1O100O1001O1O2N001O1O00002N000000000000O1000000O100000000001O00000000000000000000O100O100O1O1O1O1O11O1O00aMXGgNg8Y1\\GeNc8[1]GfNb8Z1aGdN^8\\1bGRNIhNe8V3_HTMnNFb8U3hHlLhN0_8T3kHiLhN2]8U3lHfLjN5Y8U3mHdLmN7U8o1SHkMQ1NiN7S8P2THjMP1OiN8R8o1VHhMP12hN7Q8o1VHjMP10jN7o7o1WHjMo02kN4o7P2WHjMo03kN3FDn7\\2cHhMo08hN0EINJl7]2jHhMo09gN0C1j7n1mHhMo0:gNc0Z7[1nJRNiMe0V7Y1PKSNkMf0R7W1SKSNlMh0n6U1VKSNlMk0k6R1XKUNmMk0h6P1[K[NhMg0j6n0]KbNdMb0l6l0`KhN_M=o6k0bK=_4BbKZObMVOl6`1cKXOeMUOh6c1dKVOhMSOe6g1eKSOjMmNACR7]2iKmNgMPOd6S2kKfNdMUOa6U2QL_NQ5a1UKYNk4g1[KRNf4n1`KkMa4U2U400000000000000O1000000000000000SDnMl:R2oDWNm:i1QE\\Nl:d1QEaNm:_1QEeNm:[1REhNl:Y1QEjNn:V1QElNn:T1QEoNm:Q1REQOm:o0RESOm:m0RETOn:l0REUOm:`2O1O001O1O1fIlKf1U4VNnKj1S4TNnKl1S4RNoKm1R4QNoKo1R4oMnKR2S4kMoKU2R4VMhKQM7i5S4PMkKUM3k5S4mLmKnLI08U6T4kLkKPM9U6m3hLdLX3^3cLeL]3]3`LdL`3^3\\LdLd3^3YLcLg3_3VLbLj3a3RL`Ln3d3mK\\LT4i3eKZLZ4o3YKULg4R70_IkIW4U6hKlIX4T6gKmIY4S6fKnIZ4R6eKoI[4Q6dKoI]4Q6aKQJ_4o5`KRJ`4n5_KSJa4m5^KTJb4l5\\KVJd4j5[KWJe4i5YKYJh4f5WK[Ji4e5TK^Jl4b5QKaJo4_5RK`Jn4`5RK`Jo4_5RK`Jn4`5RK`Jn4`5SK_Jn4`5RK`Jn4`5SK_JP5^5PKbJP5^5QKaJ8Bd2m5TMaJ7Fb2i5XM`J5Ja2f5ZM`J4La2d5\\M_J3N`2c5]M_JF<l2U5_M^J21^2a5aM]J12^2a5bM\\J04]2`5eMYJO7\\2`5gMVJN;Z2_5MaJ3_5MbJ2^5NbJ2^5NcJ1]5OcJ1]5OdJ0\\50dJ0\\50eJO[51eJO[51fJNZ52fJNZ52gJMY53gJMY53hJLX54iJJX56hJJX56iJIW57jJHV58kJGU59lJFT5:nJDR5<oJBR5>PK@P5`0TKVL6^1f4\\2oLaMQ3_2PM`MP3`2RM]Mb3P2_LoMo3c1RL\\NT4^1lKaNY4[1iKcNZ4Z1fKfN]4V1fKgN]4W1bLjMa3S2aLkMa3S2`LlMa3S2_LmMc3Q2^LnMd3o1]LQNd3n1]LPNe3o1[LQNg3m1ZLRNg3m1g4N2O1O1O1N2O1O1O1O0O2O1N2N1O2N3M2N2M4M2M4L5J6JUmV4"
    

print('\x00' in mask2['counts'])
coco.maskUtils.decode(mask1)
print('a')
print(coco.maskUtils.area(mask1), coco.maskUtils.area(mask2))
print(coco.maskUtils.toBbox(mask1), coco.maskUtils.toBbox(mask2))
print('a')
coco.maskUtils.decode(mask2)
print('a')